AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Cisco Systems - Creates the necessary policies, roles, security group and
  launches Cisco ASAv Instance(s)
Metadata:
  AWSAMIRegionMap:
    ap-northeast-1:
      HVM64: ami-0a3edbc2d49adc91d
    ap-northeast-2:
      HVM64: ami-0af3424b4002357f9
    ap-south-1:
      HVM64: ami-03cb656947137819f
    ap-southeast-1:
      HVM64: ami-0b7894d0f1e3bed77
    ap-southeast-2:
      HVM64: ami-007f91f7f2d993488
    ca-central-1:
      HVM64: ami-0dc3f05a9252ed7da
    eu-central-1:
      HVM64: ami-0ee46892e1b42f1ab
    eu-west-1:
      HVM64: ami-0e613bce9530d3420
    eu-west-2:
      HVM64: ami-0e86eefd5d88adc58
    eu-north-1:
      HVM64: ami-01eaad7c0b0952545
    sa-east-1:
      HVM64: ami-0901fb8b9d6e728e4
    us-east-1:
      HVM64: ami-0e7b5b45f2bb25f94
    us-east-2:
      HVM64: ami-089b209822f3c0760
    us-gov-west-1:
      HVM64: ami-c6a189a7
    us-west-1:
      HVM64: ami-0a6411e109ba2cd67
    us-west-2:
      HVM64: ami-0e8bfd9ebc1c0e78e
    ParameterGroups:
      - Label:
          default: ASAv Configuration
        Parameters:
          - InstanceTypeParam
          - KeyPair
          - MgmtSubnet1CIDR
          - MgmtSubnet2CIDR
          - PrivateSubnet1CIDR
          - PrivateSubnet2CIDR
          - PublicSubnet1CIDR
          - PublicSubnet2CIDR
          - VPCID
          - DnsName
    ParameterLabels:
      InstanceTypeParam:
        default: ASAv instance type
      KeyPair:
        default: keypair name
      MgmtSubnet1CIDR:
        default: Mgmt subnet 1
      MgmtSubnet2CIDR:
        default: Mgmt subnet 2
      PrivateSubnet1CIDR:
        default: Private subnet 1
      PrivateSubnet2CIDR:
        default: Private subnet 2
      PublicSubnet1CIDR:
        default: Public subnet 1
      PublicSubnet2CIDR:
        default: Public subnet 2
      VPCID:
        default: VPC ID
      DnsName:
        default: Dns name
Parameters:
  KeyPair:
    Type: AWS::EC2::KeyPair::KeyName
    Description: ASAv instances will launch with this keypair
  InstanceTypeParam:
    Type: String
    Default: c5.large
    AllowedValues:
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - c3.large
      - c3.xlarge
      - c3.2xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
    Description: Select an instance size for the ASAv.
  MgmtSubnet1CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.192.0/24
    Description: CIDR block for Mgmt subnet 1 in Availability Zone 1
    Type: String
  MgmtSubnet2CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.200.0/24
    Description: CIDR block for Mgmt subnet 2 in Availability Zone 2
    Type: String
  PrivateSubnet1CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.193.0/24
    Description: CIDR block for Private subnet 1 in Availability Zone 1
    Type: String
  PrivateSubnet2CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.201.0/24
    Description: CIDR block for Private subnet 2 in Availability Zone 2
    Type: String
  PublicSubnet1CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.194.0/24
    Description: CIDR block for Public subnet 1 in Availability Zone 1
    Type: String
  PublicSubnet2CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.202.0/24
    Description: CIDR block for Public subnet 2 in Availability Zone 2
    Type: String
  VPCID:
    Type: AWS::EC2::VPC::Id
    Description: Select VPC which ASAv will be deployed in
  DnsName:
    Type: String
    Description: DNS name of PrivateHostedZone
    Default: example.com
Mappings:
  AWSAMIRegionMap:
    ap-northeast-1:
      HVM64: ami-0a3edbc2d49adc91d
    ap-northeast-2:
      HVM64: ami-0af3424b4002357f9
    ap-south-1:
      HVM64: ami-03cb656947137819f
    ap-southeast-1:
      HVM64: ami-0b7894d0f1e3bed77
    ap-southeast-2:
      HVM64: ami-007f91f7f2d993488
    ca-central-1:
      HVM64: ami-0dc3f05a9252ed7da
    eu-central-1:
      HVM64: ami-0ee46892e1b42f1ab
    eu-west-1:
      HVM64: ami-0e613bce9530d3420
    eu-west-2:
      HVM64: ami-0e86eefd5d88adc58
    eu-north-1:
      HVM64: ami-01eaad7c0b0952545
    sa-east-1:
      HVM64: ami-0901fb8b9d6e728e4
    us-east-1:
      HVM64: ami-0e7b5b45f2bb25f94
    us-east-2:
      HVM64: ami-089b209822f3c0760
    us-gov-west-1:
      HVM64: ami-c6a189a7
    us-west-1:
      HVM64: ami-0a6411e109ba2cd67
    us-west-2:
      HVM64: ami-0e8bfd9ebc1c0e78e
Resources:
  PrivateHostedZone: 
    Type: "AWS::Route53::HostedZone"
    Properties: 
      HostedZoneConfig: 
        Comment: 'Hosted zone'
      Name: !Ref DnsName
      VPCs: 
        - 
          VPCId: !Ref VPCID
          VPCRegion: !Ref "AWS::Region"
      HostedZoneTags: 
        - 
          Key: 'Name'
          Value: 'ASAvHostedZone'
  ASAvDNSRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref PrivateHostedZone
      Name: 
        !Join
          - '.'
          - - 'asav1'
            - !Ref DnsName
      TTL:  5
      Type: A
      HealthCheckId: !Ref R53HealthCheck
      SetIdentifier: Frontend One
      Weight: 4
      ResourceRecords:
      - !GetAtt ASAvInstance.PublicIp
  R53HealthCheck: 
    Type: 'AWS::Route53::HealthCheck'
    Properties: 
      HealthCheckConfig: 
        IPAddress: !GetAtt ASAvInstance.PublicIp
        Port: 443
        Type: HTTP_STR_MATCH
        ResourcePath: '/'
        RequestInterval: 30
        FailureThreshold: 5
        MeasureLatency: true
        SearchString: '+CSCOE+'
      HealthCheckTags: 
        - 
          Key: Name
          Value: ASAv1Healthcheck
  MgmtSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPCID
      CidrBlock: !Ref 'MgmtSubnet1CIDR'
      AvailabilityZone: 
        Fn::Select: 
          - 0
          - Fn::GetAZs: ""
      Tags:
        - Key: Name
          Value: Mgmt subnet 1
  MgmtSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPCID
      CidrBlock: !Ref 'MgmtSubnet2CIDR'
      AvailabilityZone: 
        Fn::Select: 
          - 1
          - Fn::GetAZs: ""
      Tags:
        - Key: Name
          Value: Mgmt subnet 2
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPCID
      CidrBlock: !Ref 'PrivateSubnet1CIDR'
      AvailabilityZone: 
        Fn::Select: 
          - 0
          - Fn::GetAZs: ""
      Tags:
        - Key: Name
          Value: Private subnet 1
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPCID
      CidrBlock: !Ref 'PrivateSubnet2CIDR'
      AvailabilityZone: 
        Fn::Select: 
          - 1
          - Fn::GetAZs: ""
      Tags:
        - Key: Name
          Value: Private subnet 2
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPCID
      CidrBlock: !Ref 'PublicSubnet1CIDR'
      AvailabilityZone: 
        Fn::Select: 
          - 0
          - Fn::GetAZs: ""
      Tags:
        - Key: Name
          Value: Private subnet 1
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPCID
      CidrBlock: !Ref 'PublicSubnet2CIDR'
      AvailabilityZone: 
        Fn::Select: 
          - 1
          - Fn::GetAZs: ""
      Tags:
        - Key: Name
          Value: Private subnet 2
  ASAvInstanceSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
        GroupDescription: Security Group for ASAv Instances
        VpcId: !Ref VPCID
        Tags:
        - Key: Name
          Value: "ASAvSecurityGroup"
        SecurityGroupIngress:
        - IpProtocol: "-1"
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0
        - IpProtocol: "-1"
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0
        SecurityGroupEgress:
        - IpProtocol: "-1"
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0  
  outsideIP:
      Type: AWS::EC2::EIP
      Properties:
        Domain: vpc        
  associateOutsideIP:
      Type: AWS::EC2::EIPAssociation
      Properties:
        AllocationId: !GetAtt outsideIP.AllocationId 
        NetworkInterfaceId: !Ref outsideENI
  mgmtENI:
      Type: AWS::EC2::NetworkInterface
      Properties:
         Tags:
         - Key: Name
           Value: MgmtEni
         Description: A nice description.
         SourceDestCheck: false
         GroupSet:
         - !Ref 'ASAvInstanceSG'
         SubnetId: !Ref MgmtSubnet1
  outsideENI:
      Type: AWS::EC2::NetworkInterface
      Properties:
         Tags:
         - Key: Name
           Value: OutsideEni
         Description: A nice description.
         SourceDestCheck: false
         GroupSet:
         - !Ref 'ASAvInstanceSG'
         SubnetId: !Ref PublicSubnet1
  insideENI:
      Type: AWS::EC2::NetworkInterface
      Properties:
         Tags:
         - Key: Name
           Value: InsideEni
         Description: A nice description.
         SourceDestCheck: false
         GroupSet:
         - !Ref 'ASAvInstanceSG'
         SubnetId: !Ref PrivateSubnet1
  ASAvInstance:
    Type: 'AWS::EC2::Instance'
    Properties:
      Tags:
        - Key: Name
          Value: Cisco ASAv
      InstanceType: !Ref InstanceTypeParam
      KeyName: !Ref KeyPair
      ImageId: !FindInMap 
        - AWSAMIRegionMap
        - !Ref 'AWS::Region'
        - HVM64
      NetworkInterfaces:
       - NetworkInterfaceId: !Ref 'mgmtENI'
         DeviceIndex: '0'
       - NetworkInterfaceId: !Ref 'outsideENI'
         DeviceIndex: '1'
       - NetworkInterfaceId: !Ref 'insideENI'
         DeviceIndex: '2'
      UserData:
        Fn::Base64:  |
            ! ASA Version
            hostname RAVPNASAv01
            !
            license smart
            feature tier standard
            throughput level 10G
            call-home
              source-interface outside
            license smart register idtoken MmZkZjEzODItZmUyNy00NmVkLTk1YWYtOGQ1ZDQ4MDMyMDM5LTE1ODY0Njk4%0ANTAzMzh8N2E3cGhWYnkyWTJUNmRUSzM3RHpqQ3Zsc0FCLzVJT2hqWHZWWmRH%0ATjFhZz0%3D%0A force
            ip local pool VPN-POOL 172.16.1.1-172.16.1.254 mask 255.255.255.0
            access-list split standard permit 10.10.0.0 255.255.0.0 
            access-list split standard permit 192.168.128.0 255.255.255.0 
            !
            username plakatos password cisco123
            username plakatos attributes
            service-type remote-access
            !
            username mike password cisco123
            username mike attributes
            service-type remote-access
            !
            int tengi 0/0
            nameif outside
            security-level 0
            ip address dhcp setroute
            no shut
            int tengi 0/1
            nameif inside
            security-level 100
            ip address dhcp
            no shut 
            interface management0/0
            nameif management
            security-level 100
            ip address dhcp
            no shut
            !
            !
            webvpn
            enable outside
            anyconnect image disk0:/anyconnect-macos-4.8.02045-webdeploy-k9.pkg 1
            anyconnect enable
            tunnel-group-list enable
            group-policy LAB internal
            group-policy LAB attributes
            vpn-tunnel-protocol ssl-client ssl-clientless
            address-pools value VPN-POOL
            split-tunnel-policy tunnelspecified
            split-tunnel-network-list value split
            dynamic-access-policy-record DfltAccessPolicy
            username admin nopassword privilege 15
            tunnel-group LAB type remote-access
            tunnel-group LAB general-attributes
            default-group-policy LAB
            address-pool VPN-POOL
            tunnel-group LAB webvpn-attributes
            group-alias LAB-VPN enable
            !
            dns domain-lookup outside
            dns server-group DefaultDNS
            name-server 208.67.222.222
            name-server 208.67.220.220
            !
            same-security-traffic permit inter-interface
            same-security-traffic permit intra-interface
            !
            route inside 192.168.128.0 255.255.255.0 10.10.11.1
            !
            policy-map global_policy
            class inspection_default
              inspect icmp
            !
            access-list 101 extended permit ip any any 
            access-group 101 in interface outside
            access-group 101 in interface inside
            !
            object network NET-10.10.11.0
            subnet 10.10.11.0 255.255.255.0
            nat (inside,outside) dynamic interface
            !
            crypto key generate rsa modulus 2048
            ssh 0 0 inside
            ssh 0 0 outside
            ssh 0 0 management
            ssh timeout 30
            aaa authentication ssh console LOCAL
            username admin nopassword privilege 15
            username admin attributes
            service-type admin
            !
            name 129.6.15.28 time-a.nist.gov
            name 129.6.15.29 time-b.nist.gov
            name 129.6.15.30 time-c.nist.gov
            ntp server time-c.nist.gov
            ntp server time-b.nist.gov
            ntp server time-a.nist.gov
            icmp permit any outside
            icmp permit any inside
            icmp permit any management
            !
    
Outputs:
  AccountId:
    Description: Amazon Account ID
    Value: !Ref 'AWS::AccountId'
  MgmtSubnet1CIDR:
    Description: Mgmt subnet 1 CIDR in Availability Zone 1
    Value: !Ref 'MgmtSubnet1CIDR'
    Export:
      Name: !Sub '${AWS::StackName}-MgmtSubnet1CIDR'
  MgmtSubnet1ID:
    Description: Mgmt subnet 1 ID in Availability Zone 1
    Value: !Ref 'MgmtSubnet1'
    Export:
      Name: !Sub '${AWS::StackName}-MgmtSubnet1ID'
  MgmtSubnet2CIDR:
    Description: Mgmt subnet 2 CIDR in Availability Zone 2
    Value: !Ref 'MgmtSubnet2CIDR'
    Export:
      Name: !Sub '${AWS::StackName}-MgmtSubnet2CIDR'
  MgmtSubnet2ID:
    Description: Mgmt subnet 2 ID in Availability Zone 2
    Value: !Ref 'MgmtSubnet2'
    Export:
      Name: !Sub '${AWS::StackName}-MgmtSubnet2ID'
  PrivateSubnet1CIDR:
    Description: Private subnet 1 CIDR in Availability Zone 1
    Value: !Ref 'PrivateSubnet1CIDR'
    Export:
      Name: !Sub '${AWS::StackName}-PrivateSubnet1CIDR'
  PrivateSubnet1ID:
    Description: Private subnet 1 ID in Availability Zone 1
    Value: !Ref 'PrivateSubnet1'
    Export:
      Name: !Sub '${AWS::StackName}-PrivateSubnet1ID'
  PrivateSubnet2CIDR:
    Description: Private subnet 2 CIDR in Availability Zone 2
    Value: !Ref 'PrivateSubnet2CIDR'
    Export:
      Name: !Sub '${AWS::StackName}-PrivateSubnet2CIDR'
  PrivateSubnet2ID:
    Description: Private subnet 2 ID in Availability Zone 2
    Value: !Ref 'PrivateSubnet2'
    Export:
      Name: !Sub '${AWS::StackName}-PrivateSubnet2ID'
  PublicSubnet1CIDR:
    Description: Public subnet 1 CIDR in Availability Zone 1
    Value: !Ref 'PublicSubnet1CIDR'
    Export:
      Name: !Sub '${AWS::StackName}-PublicSubnet1CIDR'
  PublicSubnet1ID:
    Description: Public subnet 1 ID in Availability Zone 1
    Value: !Ref 'PublicSubnet1'
    Export:
      Name: !Sub '${AWS::StackName}-PublicSubnet1ID'
  PublicSubnet2CIDR:
    Description: Public subnet 2 CIDR in Availability Zone 2
    Value: !Ref 'PublicSubnet2CIDR'
    Export:
      Name: !Sub '${AWS::StackName}-PublicSubnet2CIDR'
  PublicSubnet2ID:
    Description: Public subnet 2 ID in Availability Zone 2
    Value: !Ref 'PublicSubnet2'
    Export:
      Name: !Sub '${AWS::StackName}-PublicSubnet2ID'
